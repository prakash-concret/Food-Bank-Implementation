name: Format Salesforce Code (PR Changed Files Only)

on:
  pull_request:
    branches:
      - main
      - 'feature/**'
    paths-ignore:
      - .gitignore
      - .github/**
      - security_review/**
  workflow_dispatch:

jobs:
  prettier:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # needed to push changes
      pull-requests: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Prettier and Apex Plugin
        run: |
          npm install --save-dev prettier@latest prettier-plugin-apex@latest

      - name: Get changed files in PR
        id: changed
        run: |
          git fetch origin ${{ github.base_ref }} --depth=1
          CHANGED_FILES=$(git diff --name-only origin/${{ github.base_ref }}...${{ github.head_ref }})
          echo "Changed files:"
          echo "$CHANGED_FILES"
          echo "files<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGED_FILES" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Prettier on changed Salesforce files (if exist)
        run: |
          SUPPORTED_EXTENSIONS=("cls" "trigger" "cmp" "page" "js" "html" "css")
          FILES_TO_FORMAT=()

          echo "Checking for supported files..."
          for file in ${{ steps.changed.outputs.files }}
          do
            # Skip deleted or renamed files
            if [ ! -f "$file" ]; then
              continue
            fi

            # Extract extension and check if supported
            ext="${file##*.}"
            if [[ " ${SUPPORTED_EXTENSIONS[@]} " =~ " ${ext} " ]] && [[ "$file" != *-meta.xml ]]; then
              FILES_TO_FORMAT+=("$file")
            fi
          done

          if [ ${#FILES_TO_FORMAT[@]} -eq 0 ]; then
            echo "No supported files found. Skipping Prettier."
            exit 0
          fi

          echo "Formatting files:"
          printf '%s\n' "${FILES_TO_FORMAT[@]}"
          npx prettier --write "${FILES_TO_FORMAT[@]}"

      - name: Commit and push changes (if any)
        run: |
          if [[ `git status --porcelain` ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "github-actions[bot]@users.noreply.github.com"
            git add .
            git commit -m "chore: auto-format changed Salesforce files in PR"
            git push
          else
            echo "No formatting changes detected."
          fi
